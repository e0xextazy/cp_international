# -*- coding: utf-8 -*-
"""ner_text2dict.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Jlxk5YEol2he34aVFVivf4ujgRr4acjp

# Dataset
"""

import numpy as np
import pandas as pd

df = pd.read_csv('train_dataset_train.csv', sep=';')

df.head()

df.describe()

df['Исполнитель'].unique()

df['Группа тем'].unique()

"""# Natasha"""

!pip install natasha

import re
from natasha import (
    Segmenter,
    MorphVocab,

    NewsEmbedding,
    NewsMorphTagger,
    NewsSyntaxParser,
    NewsNERTagger,

    PER,
    NamesExtractor,
    AddrExtractor,
    DatesExtractor,
    MoneyExtractor,
    Doc
)

segmenter = Segmenter()
morph_vocab = MorphVocab()

emb = NewsEmbedding()
morph_tagger = NewsMorphTagger(emb)
syntax_parser = NewsSyntaxParser(emb)
ner_tagger = NewsNERTagger(emb)

names_extractor = NamesExtractor(morph_vocab)

addr_extractor = AddrExtractor(morph_vocab)
dates_extractor = DatesExtractor(morph_vocab)
money_extractor = MoneyExtractor(morph_vocab)

def extract_phone_numbers(text):
    phone_pattern = re.compile(r"\+?\d{1,4}?[-\s]?\(?\d{1,3}?\)?[-\s]?\d{1,4}[-\s]?\d{1,4}[-\s]?\d{1,9}")
    phone_numbers = phone_pattern.findall(text)
    return phone_numbers

"""# BestFunction"""

def get_types_dict(text):
    doc = Doc(text)

    doc.segment(segmenter)
    doc.tag_morph(morph_tagger)
    doc.parse_syntax(syntax_parser)
    doc.tag_ner(ner_tagger)

    for span in doc.spans:
        span.normalize(morph_vocab)
        span.extract_fact(names_extractor)

    # LOC, ORG, PER
    dt = {'LOC': [], 'ORG': [], 'PER': []}

    for span in doc.spans:
        dt[span.type].append(span.normal)

    for key in dt:
        dt[key] = list(set(dt[key]))

    # PHONE, MONEY, ADDRES, DATES
    dt['PHONE'] = extract_phone_numbers(text)

    dt['MONEY'] = [_.fact.__dict__ for _ in money_extractor(text)]

    dt['ADDRES'] = [_.fact.__dict__ for _ in addr_extractor(text)]

    dt['DATE'] = [_.fact.__dict__ for _ in dates_extractor(text)]

    return dt




l = 5500
r = l + 100
for i, text in enumerate(df['Текст инцидента'][l:r]):

    dt = get_types_dict(text)

    cnt = sum([len(dt[key]) for key in dt])

    if cnt > 5 and len(dt['MONEY']) > 0:

        print(i + l)
        print(text.strip("'"))

        for key in dt:
            print(f'{key}:', dt[key])

        # print('count:', cnt)

        print()

"""# Best examples"""

ids = [9, 12, 349, 909, 1162, 2576]
for i in ids:
    text = df.iloc[i]['Текст инцидента']

    if i == 9:
        text = text.replace('ВСЮ', 'всю').replace('[id481705927|Борис Антонов]', '')


    print(text)
    # print(text.strip("'"))

    dt = get_types_dict(text)

    if i == 349:
        dt['LOC'][1] = 'Пермь'
    if i == 909:
        dt['LOC'] = ['Пермский край']
        dt['ORG'].append('Пермэнерго')
        del dt['PER'][1]
        dt['MONEY'].insert(0, {'amount': 7000, 'currency': 'RUB'})
        dt['ADDRES'].insert(0, {'value': 'Голдобина ', 'type': 'улица'})
        dt['ADDRES'].insert(0, {'value': 'Кунгур ', 'type': None})
    if i == 1162:
        dt['LOC'][1] = 'Кунгур'
        dt['PER'][1] = 'Иванова И. В.'
        del dt['ADDRES'][0]
        dt['ADDRES'].insert(0, {'value': 'Гоголя', 'type': 'улица'})
        dt['ADDRES'].insert(1, {'value': '3', 'type': 'дом'})
    for key in dt:
        print(f'{key}:', dt[key])
#555
    print()